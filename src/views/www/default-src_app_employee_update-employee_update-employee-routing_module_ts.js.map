{"version":3,"file":"default-src_app_employee_update-employee_update-employee-routing_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAgF;AACP;AAEZ;AACQ;AACD;AAEvB;IAOhC,sBAAsB,SAAtB,sBAAsB;IAMjC,YACU,WAAwB,EACxB,IAAiB,EACjB,OAAwB,EACxB,SAA+C,EAC9B,IAAI;QAJrB,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAa;QACjB,YAAO,GAAP,OAAO,CAAiB;QACxB,cAAS,GAAT,SAAS,CAAsC;QAT/C,WAAM,GAAG,IAAI,uDAAY,EAAO,CAAC;QACjC,aAAQ,GAAG,IAAI,uDAAY,EAAO,CAAC;QACtC,aAAQ,GAAW,EAAE,CAAC;QACtB,mBAAc,GAAW,EAAE,CAAC;QAcnC,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,qEAAyB,EAAE;gBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,WAAW,EAAE,IAAI,CAAC,QAAQ;aAC3B,CAAC;iBACD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAE5B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,MAAM,EAAE,mBAAmB;iBAC5B,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAE5B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QACF,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAE5B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;QAlCA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED,QAAQ,KAAI,CAAC;CAgCd;;YA3DQ,uEAAW;YAEX,8EAAW;YADX,+EAAe;YAHf,kEAAY;4CAwBhB,iDAAM,SAAC,qEAAe;;;qBAVxB,iDAAM;uBACN,iDAAM;;AAFI,sBAAsB;IALlC,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,gFAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAgDlC;AAhDkC;;;;;;;;;;;;;;;;;;;;ACdM;AACc;AAEK;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAkB;QAC7B,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAC,IAAI,EAAE;KACnD;CACF,CAAC;IAMW,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBM;AAQ1B;AAC8C;AACrB;AACY;AACQ;AACD;AAGvB;AACsC;IAOtE,kBAAkB,SAAlB,kBAAkB;IAO7B,YACU,UAAuB,EACxB,QAAqB,EACpB,UAAuB,EACvB,QAAyB,EACzB,WAA2B,EAC3B,MAAiB;QALjB,eAAU,GAAV,UAAU,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAa;QACpB,eAAU,GAAV,UAAU,CAAa;QACvB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAW;QAZpB,YAAO,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,WAAM,GAAY,IAAI,CAAC;QACvB,QAAG,GAAe,EAAgB,CAAC;QAEnC,gBAAW,GAAY,KAAK,CAAC;QA6GpC,YAAO,GAAG,GAAY,EAAE;YACtB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC;QAEF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC;IA3GC,CAAC;IAEJ,QAAQ;QACN,IAAI,KAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAC7B,IAAI,EAAE,GAAW,GAAG,KAAK,CAAC,WAAW,EAAE,IACrC,KAAK,CAAC,QAAQ,EAAE,GAAG,CACrB,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;QAEtB,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;QACrE,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;QAE/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CACpC;YACE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACvC,KAAK,EAAE;gBACL,EAAE;gBACF;oBACE,+DAAmB;oBACnB,8DAAkB,CAAC,wCAAwC,CAAC;iBAC7D;aACF;YACD,aAAa,EAAE;gBACb,EAAE;gBACF;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,EAAE,CAAC;oBACxB,gEAAoB,CAAC,EAAE,CAAC;oBACxB,8DAAkB,CAAC,UAAU,CAAC;iBAC/B;aACF;YACD,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACxC,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACrB,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACvC,QAAQ,EAAE,CAAC,eAAe,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAClD,KAAK,EAAE,CAAC,YAAY,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5C,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;YACpE,kEAAkE;YAClE,kEAAkE;YAClE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACtC;QACD,0DAA0D;SAC3D,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,CAAC,IAAI,EAAE;gBACV,QAAQ,CAAC;gBACT,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC3D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACjE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACjE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACvD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACrE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC3D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACtD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,YAAY,EAAE,aAAa;QACvC,OAAO,CAAC,OAAwB,EAA2B,EAAE;YAC3D,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YACjD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAEjD,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aAC1B;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;IACD,UAAU,KAAI,CAAC;IACf,MAAM;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;QAC/B,IAAI,MAAM,GAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC9C,MAAM,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QACrC,IAAI,CAAC,UAAU;aACZ,GAAG,CAAC,uEAA2B,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC;aACjE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QACnD,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAUD,UAAU;QACR,MAAM,YAAY,GAAG,IAAI,qEAAe,EAAE,CAAC;QAE3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAE1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAsB,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;CACF;;YAzJC,uDAAW;YAUJ,8EAAW;YAFX,uEAAW;YACX,+EAAe;YAFf,2DAAc;YADd,+DAAS;;AAeL,kBAAkB;IAL9B,yDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4EAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAoI9B;AApI8B","sources":["./src/app/employee/update-employee/reset-password/reset-password.component.ts","./src/app/employee/update-employee/update-employee-routing.module.ts","./src/app/employee/update-employee/update-employee.page.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertService } from 'src/app/providers/alert.service';\nimport { HttpService } from 'src/app/providers/http.service';\nimport { SnackbarService } from 'src/app/providers/snackbar.service';\nimport { UtilService } from 'src/app/providers/utilservice.service';\nimport { AppResponse } from 'src/model/AppResponse';\nimport { ApiEndPoint } from 'src/model/util';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Output() onSave = new EventEmitter<any>();\n  @Output() onCancel = new EventEmitter<any>();\n  public passCode: string = '';\n  public repeatPassCode: string = '';\n  userName: string;\n  constructor(\n    private httpService: HttpService,\n    private util: UtilService,\n    private snacBar: SnackbarService,\n    private dialogRef: MatDialogRef<ResetPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n  ) {\n    this.userName = data.userName;\n  }\n\n  ngOnInit() {}\n\n  resetPasscod = () => {\n    this.util.isLoading = true;\n\n    this.httpService\n      .post(ApiEndPoint.RESETPASSWORD, {\n        userName: this.userName,\n        newPassword: this.passCode,\n      })\n      .then((e) => {\n        this.util.isLoading = false;\n\n        this.snacBar.openSnackBar('Passwword changed');\n        this.dialogRef.close();\n        this.onSave.emit({\n          password: this.passCode,\n          status: 'Passwword changed',\n        });\n      })\n      .catch((e) => {\n        this.util.isLoading = false;\n\n        this.snacBar.openSnackBar(e.error.error);\n      });\n  };\n  cancel = () => {\n    this.util.isLoading = false;\n\n    this.dialogRef.close();\n    this.onCancel.emit({ status: 'Action canceled' });\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateEmployeePage } from './update-employee.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateEmployeePage,\n    data: { title: 'Update Employee', hideLogin:true },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateEmployeePageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from 'src/app/providers/http.service';\nimport { SnackbarService } from 'src/app/providers/snackbar.service';\nimport { UtilService } from 'src/app/providers/utilservice.service';\nimport { I_Employee } from 'src/model/employee';\nimport { HttpRespObject } from 'src/model/httpRespModel';\nimport { ApiEndPoint } from 'src/model/util';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.page.html',\n  styleUrls: ['./update-employee.page.scss'],\n})\nexport class UpdateEmployeePage implements OnInit {\n  public minDate = new Date(1950, 0, 1);\n  public maxDate = new Date();\n  public update: boolean = true;\n  public emp: I_Employee = {} as I_Employee;\n  ionicForm: FormGroup;\n  public isSubmitted: boolean = false;\n  constructor(\n    private forBuilder: FormBuilder,\n    public utilsrvc: UtilService,\n    private httpClient: HttpService,\n    private snackBar: SnackbarService,\n    private activeRoute: ActivatedRoute,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    let today: Date = new Date();\n    let dt: string = `${today.getFullYear()}-${\n      today.getMonth() + 1\n    }-${today.getDate()}`;\n\n    let defaultUserType = this.utilsrvc.metaData.userType[0].value || '';\n    let defaultRoles = this.utilsrvc.metaData.roles[0].value || '';\n\n    this.ionicForm = this.forBuilder.group(\n      {\n        firstName: ['', [Validators.required, Validators.maxLength(15)]],\n        middleName: ['', [Validators.maxLength(15)]],\n        lastName: ['', [Validators.maxLength(15)]],\n        gender: ['MALE', [Validators.required]],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$'),\n          ],\n        ],\n        mobileNumbers: [\n          '',\n          [\n            Validators.required,\n            Validators.maxLength(10),\n            Validators.minLength(10),\n            Validators.pattern('^[0-9]+$'),\n          ],\n        ],\n        dateOfBirth: [dt, [Validators.required]],\n        dateOfExist: ['', []],\n        dateOfJoin: [dt, [Validators.required]],\n        userType: [defaultUserType, [Validators.required]],\n        roles: [defaultRoles, [Validators.required]],\n        salary: ['0', [Validators.required, Validators.pattern('^[0-9]+$')]],\n        // passcode: ['', [Validators.required, Validators.minLength(8)]],\n        // passRept: ['', [Validators.required, Validators.minLength(8)]],\n        userName: ['', [Validators.required]],\n      }\n      //{ validator: this.matchPassword('passcode','passRept') }\n    );\n\n    this.activeRoute.queryParams.subscribe((p) => {\n      if (p.data) {\n        debugger;\n        this.emp = JSON.parse(p.data);\n        this.ionicForm.get('firstName').setValue(this.emp.firstName);\n        this.ionicForm.get('middleName').setValue(this.emp.middleName);\n        this.ionicForm.get('lastName').setValue(this.emp.lastName);\n        this.ionicForm.get('gender').setValue(this.emp.gender);\n        this.ionicForm.get('dateOfBirth').setValue(this.emp.dateOfBirth);\n        this.ionicForm.get('dateOfJoin').setValue(this.emp.dateOfJoin);\n        this.ionicForm.get('dateOfExist').setValue(this.emp.dateOfExist);\n        this.ionicForm.get('salary').setValue(this.emp.salary);\n        this.ionicForm.get('email').setValue(this.emp.email);\n        this.ionicForm.get('mobileNumbers').setValue(this.emp.mobileNumbers);\n        this.ionicForm.get('userName').setValue(this.emp.login.userName);\n        this.ionicForm.get('userType').setValue(this.emp.userType);\n        this.ionicForm.get('roles').setValue(this.emp.roles);\n      }\n    });\n  }\n  get errorControl() {\n    return this.ionicForm.controls;\n  }\n\n  matchPassword(firstControl, secondControl): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(firstControl).value;\n      const confirm = control.get(secondControl).value;\n\n      if (password != confirm) {\n        return { noMatch: true };\n      }\n\n      return null;\n    };\n  }\n  submitForm() {}\n  onSave() {\n    this.isSubmitted = true;\n    this.utilsrvc.isLoading = true;\n    let empObj: any = { ...this.ionicForm.value };\n    empObj.login = { ...this.emp.login };\n    this.httpClient\n      .put(ApiEndPoint.EMPLOYEE_UPDATE, this.emp.login.userName, empObj)\n      .then((e) => {\n        this.utilsrvc.isLoading = false;\n        this.snackBar.openSnackBar('Update successfull');\n      })\n      .catch((e) => {\n        this.utilsrvc.isLoading = false;\n        console.log(e);\n        this.snackBar.openSnackBar(e?.error?.error);\n      });\n  }\n\n  isValid = (): boolean => {\n    return this.ionicForm.valid;\n  };\n\n  onChangePassCode = () => {\n    this.openDialog();\n  };\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = { userName: this.emp.login.userName };\n\n    this.dialog.open(ResetPasswordComponent, dialogConfig);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}