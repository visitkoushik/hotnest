{"version":3,"file":"src_app_other-expenses_add_add_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAElB;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8CAAO;QAClB,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;KACnC;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAJhC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACjBQ;AACM;AACF;AAEA;AAEe;AAEvB;AACoB;AAC6B;IAazE,aAAa,SAAb,aAAa;CAAG;AAAhB,aAAa;IAXzB,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,mEAAc;YACd,gGAAoB;YACpB,qEAAoB;SACrB;QACD,YAAY,EAAE,CAAC,8CAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBwB;AACW;AACQ;AACD;AAGvB;IAOhC,OAAO,SAAP,OAAO;IAIlB,YACS,IAAiB,EAChB,WAAwB,EACxB,QAAyB;QAF1B,SAAI,GAAJ,IAAI,CAAa;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAiB;QAL5B,gBAAW,GAAkB,EAAmB,CAAC;IAMrD,CAAC;IAPJ,YAAY,CAAC,MAAa,IAAG,CAAC;IAS9B,QAAQ,KAAI,CAAC;IACb,eAAe;QACd,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU;IACnD,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,WAAW;aACb,IAAI,CAAC,uEAA2B,EAAE,IAAI,CAAC,WAAW,CAAC;aACnD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,EAAmB,CAAC;QACzC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAkB,EAAC,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAtCQ,8EAAW;YAFX,uEAAW;YACX,+EAAe;;AAWX,OAAO;IALnB,wDAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,gEAA8B;;KAE/B,CAAC;GACW,OAAO,CA4BnB;AA5BmB","sources":["./src/app/other-expenses/add/add-routing.module.ts","./src/app/other-expenses/add/add.module.ts","./src/app/other-expenses/add/add.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage,\n    data: { title: 'New transaction' },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPageRoutingModule } from './add-routing.module';\n\nimport { AddPage } from './add.page';\nimport { MaterialModule } from 'src/app/material.module';\nimport { BranchSelectorModule } from 'src/app/branch-selector/branch-selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MaterialModule,\n    BranchSelectorModule,\n    AddPageRoutingModule,\n  ],\n  declarations: [AddPage],\n})\nexport class AddPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from 'src/app/providers/http.service';\nimport { SnackbarService } from 'src/app/providers/snackbar.service';\nimport { UtilService } from 'src/app/providers/utilservice.service';\nimport { AppResponse } from 'src/model/AppResponse';\nimport { I_Transaction } from 'src/model/Transaction';\nimport { ApiEndPoint } from 'src/model/util';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage implements OnInit {\n  onTypeChange($event: Event) {}\n  public transaction: I_Transaction = {} as I_Transaction;\n\n  constructor(\n    public util: UtilService,\n    private httpService: HttpService,\n    private snackBar: SnackbarService\n  ) {}\n\n  ngOnInit() {}\n  onBranchChanged() {\n   this.transaction.branchCode = this.util.branchCode\n  }\n  onSave() {\n    this.util.isLoading=true;\n    this.transaction.branchCode = this.util.branchCode;\n    this.httpService\n      .post(ApiEndPoint.TRANSACTION_ADD, this.transaction)\n      .then((e) => {\n        this.util.isLoading=false;\n        this.snackBar.openSnackBar('Transaction Added');\n        this.transaction = {} as I_Transaction;\n      }).catch((e:AppResponse<any>)=>{\n        this.util.isLoading=false;\n        this.snackBar.openSnackBar(e.error);\n      });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}